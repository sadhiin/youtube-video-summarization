{
    "text": " Harshit is a friend of yours who can effortlessly map a problem to some well-known design pattern. Harshit will definitely have a competitive advantage over you, not only in his L&D rounds, but also during design discussions within his org. I can tell you from my own experience that there comes a phase in the career of every SD1 where they are expected to start mastering different design patterns. The ones who master it faster are guaranteed to grow faster in their career and are respected much more. Before I dive further, let me make it clear that knowing different design patterns doesn't mean knowledge of all the different design patterns that are out there. If you have deep understanding and intuitions behind just a few of them, they are enough to keep you sailing. So, what really is a design pattern? design patterns are tried and tested solutions to common problems faced by SDEs while designing different softwares. Let us take an example. You are trying to build a system which receives the prices of different stocks from different stock exchanges. And now we have different micro services running on the cloud and they receive data from these stock exchanges on a periodic basis they may periodically subscribe or unsubscribe themselves from these different stock exchanges if you look at this problem clearly you find out that there are some publishers and then there are some subscribers so clearly this problem falls under the category of publisher subscriber kind of design pattern now let us change this problem so now you are tasked by netflix to build a notify me feature for them so let's say there are some movies or videos on netflix which are currently not available in your region so a user should be able to click on notify me button and once he or she has clicked on it he or she must be notified as they are available so if you look at this scenario these videos clips all of them are like different publishers Whenever they are available they will publish their availability and the users are like subscribers who are subscribed to their update So the situation over here is also similar to the situation in the last problem So when I defined what design pattern is, I very clearly emphasized common problem across multiple different softwares. Now, let us understand what are the different types of design patterns out there. The first category of design patterns is called as creational pattern. As the name suggests, it has got something to do with the creation of objects. For example, singleton pattern. Let's say you have designed your application and for a particular class, you want only one object of it to float around throughout your system. You would go for singleton design pattern. You would make that class as a singleton class. Now, this use case can be encountered in different software systems under different scenarios. Another example is of factory pattern. If you want to centralize the object creation, you can do that using factory pattern. And centralizing object creation can help you out with a lot of things. Most of the times, creating an object is not very trivial because an object requires a lot of dependencies to be inserted inside it. Instead of doing that across all your different classes in your code base, it's great if that be done at one centralized location. The second category is structural design patterns. It has got something to do with the structure of classes and objects. A great example of it is adapter pattern. Have you seen an adapter? so let's say you have a plug and let's say you have so many such plugs and recently you shifted from india to us in us you found out that the sockets are different so what would you do would you just throw away all your plugs no instead you would buy a single adapter and use that adapter to get your job done right similarly if you have an interface a legacy interface which supports two methods, let's say start and end. And your entire code base is dependent upon that interface. Now if you want to start using a new interface which has a method begin and stop in that case you will have to bring in a layer of adapter in between Instead of performing code change all over your code base you can bring in an adapter connect that adapter to your code base and that way you will not have to strangle your code base throughout. The final and the most important category is behavioral pattern. For example, strategy pattern. As the name suggests, it allows you to change the strategy or algorithms during the runtime. So it allows your code to behave differently under different scenarios. And let me tell you one thing, if you just get this pattern right, you will be able to get all the other patterns that especially falls in the category of behavioral pattern. This is like mother of all the patterns yet another example could be iterator pattern iterators are everywhere in java there is an interface called as iterator c plus plus also has concept of iterators why don't you explore those what does an iterator do it encapsulates the responsibility of iteration inside something iterating different data structures requires different algorithms if you have to iterate an array you can write a for loop from i equals to 0 to n minus 1 but can you do the same thing if you have to iterate a binary search tree no you will have to use something else over there so what iterator pattern does is it encapsulates this iterative responsibility inside an object and if your code is dependent on a generic iterator that means it can iterate across multiple data structures so there are many many design patterns in each of these buckets but if you are really keen on exploring some of those just to get started or if you are keen about exploring the ones that play critical role in lnt interviews i would say go for these the first is strategy pattern and according to me this should be the first design pattern that you should learn If you understand the idea of polymorphism, if you are hands on with abstract classes, interfaces, you can get going. The second is observer pattern. It is pretty much like publisher subscriber model. So if in any software system there are some entities which publish data and some entities which consume data you can go ahead with observer pattern next is factory pattern so it like a factory of objects it allows you to centralize the object creation at one place and allows you to prevent using new keyword across different different classes the next one is decorator pattern and it is pretty useful i'll tell you It allows us to layer an object with different different capabilities without actually changing its super type. For example, let's say there is a reader. It simply reads data from my hard drive. Now, I can bring on a layer of buffering on top of it and then I can start calling it buffered file reader. Where it not only reads from the file, but creates a buffer of that in RAM and then reads from it. thereby improving performance. So decorator pattern is all about decorating a raw object with different different capabilities without changing its super type. The final one is builder pattern. You must have seen a lot of classes. For example, let's say there is a class called as user which has multiple attributes inside it. User name, user id, user age, user weight, etc. So on and on. Now if somebody wants to create an instance of user, he may or may not want to pass all these fields somebody might only want to pass user id somebody might want to pass user id name there can be different combinations right so what would you want to do in that case would you want to write multiple constructors for that that is going to be a really bad idea if you want to write different centers for that then that means you are not very sure about the concept of immutability there can be less conditions if you design your code that way So what comes to our rescue is a builder pattern. It's a very well-known pattern. If you have ever used the annotations like at the right builder from libraries like Longbok, what is it that it does? During the compile time, it generates those builders for you and thereby prevents you from writing the boilerplate code. All in all, builder is a great pattern to learn about. So let me know in the chat box that out of these patterns, which one makes you most curious and you would like to hear more about that particular pattern from me.",
    "task": "transcribe",
    "language": "English",
    "duration": 569.27575,
    "segments": [
        {
            "id": 0,
            "seek": 0,
            "start": 0,
            "end": 5.18,
            "text": " Harshit is a friend of yours who can effortlessly map a problem to some well-known design pattern.",
            "tokens": [
                50365,
                48914,
                270,
                307,
                257,
                1277,
                295,
                6342,
                567,
                393,
                4630,
                12048,
                4471,
                257,
                1154,
                281,
                512,
                731,
                12,
                6861,
                1715,
                5102,
                13,
                50624
            ],
            "temperature": 0,
            "avg_logprob": -0.119671255,
            "compression_ratio": 1.5686275,
            "no_speech_prob": 2.7401258e-12
        },
        {
            "id": 1,
            "seek": 0,
            "start": 5.5,
            "end": 8.88,
            "text": " Harshit will definitely have a competitive advantage over you,",
            "tokens": [
                50640,
                48914,
                270,
                486,
                2138,
                362,
                257,
                10043,
                5002,
                670,
                291,
                11,
                50809
            ],
            "temperature": 0,
            "avg_logprob": -0.119671255,
            "compression_ratio": 1.5686275,
            "no_speech_prob": 2.7401258e-12
        },
        {
            "id": 2,
            "seek": 0,
            "start": 9.28,
            "end": 14.28,
            "text": " not only in his L&D rounds, but also during design discussions within his org.",
            "tokens": [
                50829,
                406,
                787,
                294,
                702,
                441,
                5,
                35,
                13757,
                11,
                457,
                611,
                1830,
                1715,
                11088,
                1951,
                702,
                14045,
                13,
                51079
            ],
            "temperature": 0,
            "avg_logprob": -0.119671255,
            "compression_ratio": 1.5686275,
            "no_speech_prob": 2.7401258e-12
        },
        {
            "id": 3,
            "seek": 0,
            "start": 14.44,
            "end": 20.78,
            "text": " I can tell you from my own experience that there comes a phase in the career of every SD1",
            "tokens": [
                51087,
                286,
                393,
                980,
                291,
                490,
                452,
                1065,
                1752,
                300,
                456,
                1487,
                257,
                5574,
                294,
                264,
                3988,
                295,
                633,
                14638,
                16,
                51404
            ],
            "temperature": 0,
            "avg_logprob": -0.119671255,
            "compression_ratio": 1.5686275,
            "no_speech_prob": 2.7401258e-12
        },
        {
            "id": 4,
            "seek": 0,
            "start": 20.78,
            "end": 24.96,
            "text": " where they are expected to start mastering different design patterns.",
            "tokens": [
                51404,
                689,
                436,
                366,
                5176,
                281,
                722,
                49382,
                819,
                1715,
                8294,
                13,
                51613
            ],
            "temperature": 0,
            "avg_logprob": -0.119671255,
            "compression_ratio": 1.5686275,
            "no_speech_prob": 2.7401258e-12
        },
        {
            "id": 5,
            "seek": 2496,
            "start": 24.96,
            "end": 33.46,
            "text": " The ones who master it faster are guaranteed to grow faster in their career and are respected much more.",
            "tokens": [
                50365,
                440,
                2306,
                567,
                4505,
                309,
                4663,
                366,
                18031,
                281,
                1852,
                4663,
                294,
                641,
                3988,
                293,
                366,
                20020,
                709,
                544,
                13,
                50790
            ],
            "temperature": 0,
            "avg_logprob": -0.119445175,
            "compression_ratio": 1.6829268,
            "no_speech_prob": 3.0094993e-12
        },
        {
            "id": 6,
            "seek": 2496,
            "start": 33.66,
            "end": 43.66,
            "text": " Before I dive further, let me make it clear that knowing different design patterns doesn't mean knowledge of all the different design patterns that are out there.",
            "tokens": [
                50800,
                4546,
                286,
                9192,
                3052,
                11,
                718,
                385,
                652,
                309,
                1850,
                300,
                5276,
                819,
                1715,
                8294,
                1177,
                380,
                914,
                3601,
                295,
                439,
                264,
                819,
                1715,
                8294,
                300,
                366,
                484,
                456,
                13,
                51300
            ],
            "temperature": 0,
            "avg_logprob": -0.119445175,
            "compression_ratio": 1.6829268,
            "no_speech_prob": 3.0094993e-12
        },
        {
            "id": 7,
            "seek": 2496,
            "start": 43.94,
            "end": 49.92,
            "text": " If you have deep understanding and intuitions behind just a few of them, they are enough to keep you sailing.",
            "tokens": [
                51314,
                759,
                291,
                362,
                2452,
                3701,
                293,
                16224,
                626,
                2261,
                445,
                257,
                1326,
                295,
                552,
                11,
                436,
                366,
                1547,
                281,
                1066,
                291,
                27452,
                13,
                51613
            ],
            "temperature": 0,
            "avg_logprob": -0.119445175,
            "compression_ratio": 1.6829268,
            "no_speech_prob": 3.0094993e-12
        },
        {
            "id": 8,
            "seek": 2496,
            "start": 50.26,
            "end": 52.7,
            "text": " So, what really is a design pattern?",
            "tokens": [
                51630,
                407,
                11,
                437,
                534,
                307,
                257,
                1715,
                5102,
                30,
                51752
            ],
            "temperature": 0,
            "avg_logprob": -0.119445175,
            "compression_ratio": 1.6829268,
            "no_speech_prob": 3.0094993e-12
        },
        {
            "id": 9,
            "seek": 5270,
            "start": 52.7,
            "end": 61.54,
            "text": " design patterns are tried and tested solutions to common problems faced by SDEs while designing",
            "tokens": [
                50365,
                1715,
                8294,
                366,
                3031,
                293,
                8246,
                6547,
                281,
                2689,
                2740,
                11446,
                538,
                14638,
                20442,
                1339,
                14685,
                50807
            ],
            "temperature": 0,
            "avg_logprob": -0.09785071,
            "compression_ratio": 1.6860987,
            "no_speech_prob": 1.8907224e-12
        },
        {
            "id": 10,
            "seek": 5270,
            "start": 61.54,
            "end": 67.6,
            "text": " different softwares. Let us take an example. You are trying to build a system which receives the",
            "tokens": [
                50807,
                819,
                2787,
                4151,
                495,
                13,
                961,
                505,
                747,
                364,
                1365,
                13,
                509,
                366,
                1382,
                281,
                1322,
                257,
                1185,
                597,
                20717,
                264,
                51110
            ],
            "temperature": 0,
            "avg_logprob": -0.09785071,
            "compression_ratio": 1.6860987,
            "no_speech_prob": 1.8907224e-12
        },
        {
            "id": 11,
            "seek": 5270,
            "start": 67.6,
            "end": 73.62,
            "text": " prices of different stocks from different stock exchanges. And now we have different micro",
            "tokens": [
                51110,
                7901,
                295,
                819,
                12966,
                490,
                819,
                4127,
                27374,
                13,
                400,
                586,
                321,
                362,
                819,
                4532,
                51411
            ],
            "temperature": 0,
            "avg_logprob": -0.09785071,
            "compression_ratio": 1.6860987,
            "no_speech_prob": 1.8907224e-12
        },
        {
            "id": 12,
            "seek": 5270,
            "start": 73.62,
            "end": 80.36,
            "text": " services running on the cloud and they receive data from these stock exchanges on a periodic",
            "tokens": [
                51411,
                3328,
                2614,
                322,
                264,
                4588,
                293,
                436,
                4774,
                1412,
                490,
                613,
                4127,
                27374,
                322,
                257,
                27790,
                51748
            ],
            "temperature": 0,
            "avg_logprob": -0.09785071,
            "compression_ratio": 1.6860987,
            "no_speech_prob": 1.8907224e-12
        },
        {
            "id": 13,
            "seek": 8036,
            "start": 80.36,
            "end": 86.84,
            "text": " basis they may periodically subscribe or unsubscribe themselves from these different",
            "tokens": [
                50365,
                5143,
                436,
                815,
                38916,
                3022,
                420,
                2693,
                9493,
                2969,
                490,
                613,
                819,
                50689
            ],
            "temperature": 0,
            "avg_logprob": -0.035369147,
            "compression_ratio": 1.8814433,
            "no_speech_prob": 2.1092548e-12
        },
        {
            "id": 14,
            "seek": 8036,
            "start": 86.84,
            "end": 92.92,
            "text": " stock exchanges if you look at this problem clearly you find out that there are some publishers",
            "tokens": [
                50689,
                4127,
                27374,
                498,
                291,
                574,
                412,
                341,
                1154,
                4448,
                291,
                915,
                484,
                300,
                456,
                366,
                512,
                30421,
                50993
            ],
            "temperature": 0,
            "avg_logprob": -0.035369147,
            "compression_ratio": 1.8814433,
            "no_speech_prob": 2.1092548e-12
        },
        {
            "id": 15,
            "seek": 8036,
            "start": 92.92,
            "end": 98.76,
            "text": " and then there are some subscribers so clearly this problem falls under the category of",
            "tokens": [
                50993,
                293,
                550,
                456,
                366,
                512,
                11092,
                370,
                4448,
                341,
                1154,
                8804,
                833,
                264,
                7719,
                295,
                51285
            ],
            "temperature": 0,
            "avg_logprob": -0.035369147,
            "compression_ratio": 1.8814433,
            "no_speech_prob": 2.1092548e-12
        },
        {
            "id": 16,
            "seek": 8036,
            "start": 98.76,
            "end": 105,
            "text": " publisher subscriber kind of design pattern now let us change this problem so now you are tasked",
            "tokens": [
                51285,
                25088,
                26122,
                733,
                295,
                1715,
                5102,
                586,
                718,
                505,
                1319,
                341,
                1154,
                370,
                586,
                291,
                366,
                38621,
                51597
            ],
            "temperature": 0,
            "avg_logprob": -0.035369147,
            "compression_ratio": 1.8814433,
            "no_speech_prob": 2.1092548e-12
        },
        {
            "id": 17,
            "seek": 10500,
            "start": 105,
            "end": 111.24,
            "text": " by netflix to build a notify me feature for them so let's say there are some movies or videos on",
            "tokens": [
                50365,
                538,
                2533,
                12336,
                281,
                1322,
                257,
                36560,
                385,
                4111,
                337,
                552,
                370,
                718,
                311,
                584,
                456,
                366,
                512,
                6233,
                420,
                2145,
                322,
                50677
            ],
            "temperature": 0,
            "avg_logprob": -0.04216653,
            "compression_ratio": 1.7466063,
            "no_speech_prob": 2.150808e-12
        },
        {
            "id": 18,
            "seek": 10500,
            "start": 111.24,
            "end": 118.6,
            "text": " netflix which are currently not available in your region so a user should be able to click on notify",
            "tokens": [
                50677,
                2533,
                12336,
                597,
                366,
                4362,
                406,
                2435,
                294,
                428,
                4458,
                370,
                257,
                4195,
                820,
                312,
                1075,
                281,
                2052,
                322,
                36560,
                51045
            ],
            "temperature": 0,
            "avg_logprob": -0.04216653,
            "compression_ratio": 1.7466063,
            "no_speech_prob": 2.150808e-12
        },
        {
            "id": 19,
            "seek": 10500,
            "start": 118.6,
            "end": 125.24,
            "text": " me button and once he or she has clicked on it he or she must be notified as they are available",
            "tokens": [
                51045,
                385,
                2960,
                293,
                1564,
                415,
                420,
                750,
                575,
                23370,
                322,
                309,
                415,
                420,
                750,
                1633,
                312,
                18013,
                382,
                436,
                366,
                2435,
                51377
            ],
            "temperature": 0,
            "avg_logprob": -0.04216653,
            "compression_ratio": 1.7466063,
            "no_speech_prob": 2.150808e-12
        },
        {
            "id": 20,
            "seek": 10500,
            "start": 125.8,
            "end": 133.48,
            "text": " so if you look at this scenario these videos clips all of them are like different publishers",
            "tokens": [
                51405,
                370,
                498,
                291,
                574,
                412,
                341,
                9005,
                613,
                2145,
                13117,
                439,
                295,
                552,
                366,
                411,
                819,
                30421,
                51789
            ],
            "temperature": 0,
            "avg_logprob": -0.04216653,
            "compression_ratio": 1.7466063,
            "no_speech_prob": 2.150808e-12
        },
        {
            "id": 21,
            "seek": 137,
            "start": 133.48,
            "end": 146.72525,
            "text": " Whenever they are available they will publish their availability and the users are like subscribers who are subscribed to their update So the situation over here is also similar to the situation in the last problem",
            "tokens": [
                50365,
                14159,
                436,
                366,
                2435,
                11,
                436,
                486,
                11374,
                641,
                17945,
                293,
                264,
                5022,
                366,
                411,
                11092,
                567,
                366,
                16665,
                281,
                641,
                5623,
                13,
                50792,
                50795,
                407,
                264,
                2590,
                670,
                510,
                307,
                611,
                2531,
                281,
                264,
                2590,
                294,
                264,
                1036,
                1154,
                13,
                50835
            ],
            "temperature": 0,
            "avg_logprob": -0.18968259,
            "compression_ratio": 1.7377049,
            "no_speech_prob": 1.943107e-12
        },
        {
            "id": 22,
            "seek": 137,
            "start": 147.46526,
            "end": 150.08525,
            "text": " So when I defined what design pattern is,",
            "tokens": [
                50872,
                407,
                562,
                286,
                7642,
                437,
                1715,
                5102,
                307,
                11,
                51003
            ],
            "temperature": 0,
            "avg_logprob": -0.18968259,
            "compression_ratio": 1.7377049,
            "no_speech_prob": 1.943107e-12
        },
        {
            "id": 23,
            "seek": 137,
            "start": 150.08525,
            "end": 157.88525,
            "text": " I very clearly emphasized common problem across multiple different softwares.",
            "tokens": [
                51003,
                286,
                588,
                4448,
                34068,
                2689,
                1154,
                2108,
                3866,
                819,
                2787,
                4151,
                495,
                13,
                51393
            ],
            "temperature": 0,
            "avg_logprob": -0.18968259,
            "compression_ratio": 1.7377049,
            "no_speech_prob": 1.943107e-12
        },
        {
            "id": 24,
            "seek": 137,
            "start": 158.04526,
            "end": 162.60526,
            "text": " Now, let us understand what are the different types of design patterns out there.",
            "tokens": [
                51401,
                823,
                11,
                718,
                505,
                1223,
                437,
                366,
                264,
                819,
                3467,
                295,
                1715,
                8294,
                484,
                456,
                13,
                51629
            ],
            "temperature": 0,
            "avg_logprob": -0.18968259,
            "compression_ratio": 1.7377049,
            "no_speech_prob": 1.943107e-12
        },
        {
            "id": 25,
            "seek": 137,
            "start": 163.32526,
            "end": 166.78525,
            "text": " The first category of design patterns is called as creational pattern.",
            "tokens": [
                51665,
                440,
                700,
                7719,
                295,
                1715,
                8294,
                307,
                1219,
                382,
                1197,
                1478,
                5102,
                13,
                51838
            ],
            "temperature": 0,
            "avg_logprob": -0.18968259,
            "compression_ratio": 1.7377049,
            "no_speech_prob": 1.943107e-12
        },
        {
            "id": 26,
            "seek": 3083,
            "start": 166.78525,
            "end": 171.58525,
            "text": " As the name suggests, it has got something to do with the creation of objects.",
            "tokens": [
                50365,
                1018,
                264,
                1315,
                13409,
                11,
                309,
                575,
                658,
                746,
                281,
                360,
                365,
                264,
                8016,
                295,
                6565,
                13,
                50605
            ],
            "temperature": 0,
            "avg_logprob": -0.15852593,
            "compression_ratio": 1.7054263,
            "no_speech_prob": 2.9856092e-12
        },
        {
            "id": 27,
            "seek": 3083,
            "start": 172.32526,
            "end": 174.56526,
            "text": " For example, singleton pattern.",
            "tokens": [
                50642,
                1171,
                1365,
                11,
                1522,
                14806,
                5102,
                13,
                50754
            ],
            "temperature": 0,
            "avg_logprob": -0.15852593,
            "compression_ratio": 1.7054263,
            "no_speech_prob": 2.9856092e-12
        },
        {
            "id": 28,
            "seek": 3083,
            "start": 175.42526,
            "end": 179.14526,
            "text": " Let's say you have designed your application and for a particular class,",
            "tokens": [
                50797,
                961,
                311,
                584,
                291,
                362,
                4761,
                428,
                3861,
                293,
                337,
                257,
                1729,
                1508,
                11,
                50983
            ],
            "temperature": 0,
            "avg_logprob": -0.15852593,
            "compression_ratio": 1.7054263,
            "no_speech_prob": 2.9856092e-12
        },
        {
            "id": 29,
            "seek": 3083,
            "start": 179.48526,
            "end": 183.40526,
            "text": " you want only one object of it to float around throughout your system.",
            "tokens": [
                51000,
                291,
                528,
                787,
                472,
                2657,
                295,
                309,
                281,
                15706,
                926,
                3710,
                428,
                1185,
                13,
                51196
            ],
            "temperature": 0,
            "avg_logprob": -0.15852593,
            "compression_ratio": 1.7054263,
            "no_speech_prob": 2.9856092e-12
        },
        {
            "id": 30,
            "seek": 3083,
            "start": 184.10526,
            "end": 186.76526,
            "text": " You would go for singleton design pattern.",
            "tokens": [
                51231,
                509,
                576,
                352,
                337,
                1522,
                14806,
                1715,
                5102,
                13,
                51364
            ],
            "temperature": 0,
            "avg_logprob": -0.15852593,
            "compression_ratio": 1.7054263,
            "no_speech_prob": 2.9856092e-12
        },
        {
            "id": 31,
            "seek": 3083,
            "start": 187.18526,
            "end": 189.54526,
            "text": " You would make that class as a singleton class.",
            "tokens": [
                51385,
                509,
                576,
                652,
                300,
                1508,
                382,
                257,
                1522,
                14806,
                1508,
                13,
                51503
            ],
            "temperature": 0,
            "avg_logprob": -0.15852593,
            "compression_ratio": 1.7054263,
            "no_speech_prob": 2.9856092e-12
        },
        {
            "id": 32,
            "seek": 3083,
            "start": 190.00525,
            "end": 195.78525,
            "text": " Now, this use case can be encountered in different software systems under different scenarios.",
            "tokens": [
                51526,
                823,
                11,
                341,
                764,
                1389,
                393,
                312,
                20381,
                294,
                819,
                4722,
                3652,
                833,
                819,
                15077,
                13,
                51815
            ],
            "temperature": 0,
            "avg_logprob": -0.15852593,
            "compression_ratio": 1.7054263,
            "no_speech_prob": 2.9856092e-12
        },
        {
            "id": 33,
            "seek": 5983,
            "start": 195.78525,
            "end": 198.58525,
            "text": " Another example is of factory pattern.",
            "tokens": [
                50365,
                3996,
                1365,
                307,
                295,
                9265,
                5102,
                13,
                50505
            ],
            "temperature": 0,
            "avg_logprob": -0.17508374,
            "compression_ratio": 1.6958762,
            "no_speech_prob": 2.4852412e-12
        },
        {
            "id": 34,
            "seek": 5983,
            "start": 199.22525,
            "end": 205.70526,
            "text": " If you want to centralize the object creation, you can do that using factory pattern.",
            "tokens": [
                50537,
                759,
                291,
                528,
                281,
                5777,
                1125,
                264,
                2657,
                8016,
                11,
                291,
                393,
                360,
                300,
                1228,
                9265,
                5102,
                13,
                50861
            ],
            "temperature": 0,
            "avg_logprob": -0.17508374,
            "compression_ratio": 1.6958762,
            "no_speech_prob": 2.4852412e-12
        },
        {
            "id": 35,
            "seek": 5983,
            "start": 206.72525,
            "end": 210.68526,
            "text": " And centralizing object creation can help you out with a lot of things.",
            "tokens": [
                50912,
                400,
                5777,
                3319,
                2657,
                8016,
                393,
                854,
                291,
                484,
                365,
                257,
                688,
                295,
                721,
                13,
                51110
            ],
            "temperature": 0,
            "avg_logprob": -0.17508374,
            "compression_ratio": 1.6958762,
            "no_speech_prob": 2.4852412e-12
        },
        {
            "id": 36,
            "seek": 5983,
            "start": 211.18526,
            "end": 218.94525,
            "text": " Most of the times, creating an object is not very trivial because an object requires a lot of dependencies to be inserted inside it.",
            "tokens": [
                51135,
                4534,
                295,
                264,
                1413,
                11,
                4084,
                364,
                2657,
                307,
                406,
                588,
                26703,
                570,
                364,
                2657,
                7029,
                257,
                688,
                295,
                36606,
                281,
                312,
                27992,
                1854,
                309,
                13,
                51523
            ],
            "temperature": 0,
            "avg_logprob": -0.17508374,
            "compression_ratio": 1.6958762,
            "no_speech_prob": 2.4852412e-12
        },
        {
            "id": 37,
            "seek": 8299,
            "start": 218.94525,
            "end": 228.88525,
            "text": " Instead of doing that across all your different classes in your code base, it's great if that be done at one centralized location.",
            "tokens": [
                50365,
                7156,
                295,
                884,
                300,
                2108,
                439,
                428,
                819,
                5359,
                294,
                428,
                3089,
                3096,
                11,
                309,
                311,
                869,
                498,
                300,
                312,
                1096,
                412,
                472,
                32395,
                4914,
                13,
                50862
            ],
            "temperature": 0,
            "avg_logprob": -0.22848669,
            "compression_ratio": 1.5714285,
            "no_speech_prob": 2.6661542e-12
        },
        {
            "id": 38,
            "seek": 8299,
            "start": 229.42526,
            "end": 232.56525,
            "text": " The second category is structural design patterns.",
            "tokens": [
                50889,
                440,
                1150,
                7719,
                307,
                15067,
                1715,
                8294,
                13,
                51046
            ],
            "temperature": 0,
            "avg_logprob": -0.22848669,
            "compression_ratio": 1.5714285,
            "no_speech_prob": 2.6661542e-12
        },
        {
            "id": 39,
            "seek": 8299,
            "start": 233.14526,
            "end": 237.04526,
            "text": " It has got something to do with the structure of classes and objects.",
            "tokens": [
                51075,
                467,
                575,
                658,
                746,
                281,
                360,
                365,
                264,
                3877,
                295,
                5359,
                293,
                6565,
                13,
                51270
            ],
            "temperature": 0,
            "avg_logprob": -0.22848669,
            "compression_ratio": 1.5714285,
            "no_speech_prob": 2.6661542e-12
        },
        {
            "id": 40,
            "seek": 8299,
            "start": 237.44525,
            "end": 239.98526,
            "text": " A great example of it is adapter pattern.",
            "tokens": [
                51290,
                316,
                869,
                1365,
                295,
                309,
                307,
                22860,
                5102,
                13,
                51417
            ],
            "temperature": 0,
            "avg_logprob": -0.22848669,
            "compression_ratio": 1.5714285,
            "no_speech_prob": 2.6661542e-12
        },
        {
            "id": 41,
            "seek": 8299,
            "start": 240.84525,
            "end": 241.84525,
            "text": " Have you seen an adapter?",
            "tokens": [
                51460,
                3560,
                291,
                1612,
                364,
                22860,
                30,
                51510
            ],
            "temperature": 0,
            "avg_logprob": -0.22848669,
            "compression_ratio": 1.5714285,
            "no_speech_prob": 2.6661542e-12
        },
        {
            "id": 42,
            "seek": 10589,
            "start": 241.84525,
            "end": 248.68526,
            "text": " so let's say you have a plug and let's say you have so many such plugs and recently you shifted",
            "tokens": [
                50365,
                370,
                718,
                311,
                584,
                291,
                362,
                257,
                5452,
                293,
                718,
                311,
                584,
                291,
                362,
                370,
                867,
                1270,
                33899,
                293,
                3938,
                291,
                18892,
                50707
            ],
            "temperature": 0,
            "avg_logprob": -0.04930085,
            "compression_ratio": 1.8388625,
            "no_speech_prob": 2.9742897e-12
        },
        {
            "id": 43,
            "seek": 10589,
            "start": 248.68526,
            "end": 255.00525,
            "text": " from india to us in us you found out that the sockets are different so what would you do would",
            "tokens": [
                50707,
                490,
                1016,
                654,
                281,
                505,
                294,
                505,
                291,
                1352,
                484,
                300,
                264,
                370,
                11984,
                366,
                819,
                370,
                437,
                576,
                291,
                360,
                576,
                51023
            ],
            "temperature": 0,
            "avg_logprob": -0.04930085,
            "compression_ratio": 1.8388625,
            "no_speech_prob": 2.9742897e-12
        },
        {
            "id": 44,
            "seek": 10589,
            "start": 255.00525,
            "end": 261.32526,
            "text": " you just throw away all your plugs no instead you would buy a single adapter and use that adapter",
            "tokens": [
                51023,
                291,
                445,
                3507,
                1314,
                439,
                428,
                33899,
                572,
                2602,
                291,
                576,
                2256,
                257,
                2167,
                22860,
                293,
                764,
                300,
                22860,
                51339
            ],
            "temperature": 0,
            "avg_logprob": -0.04930085,
            "compression_ratio": 1.8388625,
            "no_speech_prob": 2.9742897e-12
        },
        {
            "id": 45,
            "seek": 10589,
            "start": 261.32526,
            "end": 268.62524,
            "text": " to get your job done right similarly if you have an interface a legacy interface which supports two",
            "tokens": [
                51339,
                281,
                483,
                428,
                1691,
                1096,
                558,
                14138,
                498,
                291,
                362,
                364,
                9226,
                257,
                11711,
                9226,
                597,
                9346,
                732,
                51704
            ],
            "temperature": 0,
            "avg_logprob": -0.04930085,
            "compression_ratio": 1.8388625,
            "no_speech_prob": 2.9742897e-12
        },
        {
            "id": 46,
            "seek": 13267,
            "start": 268.62524,
            "end": 271.00525,
            "text": " methods, let's say start and end.",
            "tokens": [
                50365,
                7150,
                11,
                718,
                311,
                584,
                722,
                293,
                917,
                13,
                50484
            ],
            "temperature": 0,
            "avg_logprob": -0.27265093,
            "compression_ratio": 1.5297297,
            "no_speech_prob": 1.1113945e-12
        },
        {
            "id": 47,
            "seek": 13267,
            "start": 271.86523,
            "end": 275.38525,
            "text": " And your entire code base is dependent upon that interface.",
            "tokens": [
                50527,
                400,
                428,
                2302,
                3089,
                3096,
                307,
                12334,
                3564,
                300,
                9226,
                13,
                50703
            ],
            "temperature": 0,
            "avg_logprob": -0.27265093,
            "compression_ratio": 1.5297297,
            "no_speech_prob": 1.1113945e-12
        },
        {
            "id": 48,
            "seek": 279,
            "start": 275.46527,
            "end": 293.1105,
            "text": " Now if you want to start using a new interface which has a method begin and stop in that case you will have to bring in a layer of adapter in between Instead of performing code change all over your code base you can bring in an adapter",
            "tokens": [
                50707,
                823,
                11,
                498,
                291,
                528,
                281,
                722,
                1228,
                257,
                777,
                9226,
                11,
                597,
                575,
                257,
                3170,
                1841,
                293,
                50998,
                50998,
                1590,
                11,
                294,
                300,
                1389,
                11,
                291,
                486,
                362,
                281,
                1565,
                294,
                257,
                4583,
                295,
                22860,
                294,
                1296,
                13,
                50681,
                50729,
                7156,
                295,
                10205,
                3089,
                1319,
                439,
                670,
                428,
                3089,
                3096,
                11,
                291,
                393,
                1565,
                294,
                364,
                22860,
                11,
                51038
            ],
            "temperature": 0,
            "avg_logprob": -0.21356311,
            "compression_ratio": 1.7655503,
            "no_speech_prob": 2.614385e-12
        },
        {
            "id": 49,
            "seek": 279,
            "start": 293.7305,
            "end": 299.75052,
            "text": " connect that adapter to your code base and that way you will not have to strangle your code base",
            "tokens": [
                51069,
                1745,
                300,
                22860,
                281,
                428,
                3089,
                3096,
                293,
                300,
                636,
                291,
                486,
                406,
                362,
                281,
                1056,
                7846,
                428,
                3089,
                3096,
                51370
            ],
            "temperature": 0,
            "avg_logprob": -0.21356311,
            "compression_ratio": 1.7655503,
            "no_speech_prob": 2.614385e-12
        },
        {
            "id": 50,
            "seek": 279,
            "start": 299.75052,
            "end": 305.3705,
            "text": " throughout. The final and the most important category is behavioral pattern. For example,",
            "tokens": [
                51370,
                3710,
                13,
                440,
                2572,
                293,
                264,
                881,
                1021,
                7719,
                307,
                19124,
                5102,
                13,
                1171,
                1365,
                11,
                51651
            ],
            "temperature": 0,
            "avg_logprob": -0.21356311,
            "compression_ratio": 1.7655503,
            "no_speech_prob": 2.614385e-12
        },
        {
            "id": 51,
            "seek": 2851,
            "start": 305.3705,
            "end": 312.63052,
            "text": " strategy pattern. As the name suggests, it allows you to change the strategy or algorithms during",
            "tokens": [
                50365,
                5206,
                5102,
                13,
                1018,
                264,
                1315,
                13409,
                11,
                309,
                4045,
                291,
                281,
                1319,
                264,
                5206,
                420,
                14642,
                1830,
                50728
            ],
            "temperature": 0,
            "avg_logprob": -0.055219434,
            "compression_ratio": 1.712963,
            "no_speech_prob": 2.7281907e-12
        },
        {
            "id": 52,
            "seek": 2851,
            "start": 312.63052,
            "end": 320.03052,
            "text": " the runtime. So it allows your code to behave differently under different scenarios. And let",
            "tokens": [
                50728,
                264,
                34474,
                13,
                407,
                309,
                4045,
                428,
                3089,
                281,
                15158,
                7614,
                833,
                819,
                15077,
                13,
                400,
                718,
                51098
            ],
            "temperature": 0,
            "avg_logprob": -0.055219434,
            "compression_ratio": 1.712963,
            "no_speech_prob": 2.7281907e-12
        },
        {
            "id": 53,
            "seek": 2851,
            "start": 320.03052,
            "end": 325.03052,
            "text": " me tell you one thing, if you just get this pattern right, you will be able to get all the",
            "tokens": [
                51098,
                385,
                980,
                291,
                472,
                551,
                11,
                498,
                291,
                445,
                483,
                341,
                5102,
                558,
                11,
                291,
                486,
                312,
                1075,
                281,
                483,
                439,
                264,
                51348
            ],
            "temperature": 0,
            "avg_logprob": -0.055219434,
            "compression_ratio": 1.712963,
            "no_speech_prob": 2.7281907e-12
        },
        {
            "id": 54,
            "seek": 2851,
            "start": 325.03052,
            "end": 330.9305,
            "text": " other patterns that especially falls in the category of behavioral pattern. This is like",
            "tokens": [
                51348,
                661,
                8294,
                300,
                2318,
                8804,
                294,
                264,
                7719,
                295,
                19124,
                5102,
                13,
                639,
                307,
                411,
                51643
            ],
            "temperature": 0,
            "avg_logprob": -0.055219434,
            "compression_ratio": 1.712963,
            "no_speech_prob": 2.7281907e-12
        },
        {
            "id": 55,
            "seek": 5407,
            "start": 330.9305,
            "end": 337.4905,
            "text": " mother of all the patterns yet another example could be iterator pattern iterators are everywhere",
            "tokens": [
                50365,
                2895,
                295,
                439,
                264,
                8294,
                1939,
                1071,
                1365,
                727,
                312,
                17138,
                1639,
                5102,
                17138,
                3391,
                366,
                5315,
                50693
            ],
            "temperature": 0,
            "avg_logprob": -0.065924875,
            "compression_ratio": 1.8221154,
            "no_speech_prob": 3.2408943e-12
        },
        {
            "id": 56,
            "seek": 5407,
            "start": 337.4905,
            "end": 343.8905,
            "text": " in java there is an interface called as iterator c plus plus also has concept of iterators why",
            "tokens": [
                50693,
                294,
                361,
                4061,
                456,
                307,
                364,
                9226,
                1219,
                382,
                17138,
                1639,
                269,
                1804,
                1804,
                611,
                575,
                3410,
                295,
                17138,
                3391,
                983,
                51013
            ],
            "temperature": 0,
            "avg_logprob": -0.065924875,
            "compression_ratio": 1.8221154,
            "no_speech_prob": 3.2408943e-12
        },
        {
            "id": 57,
            "seek": 5407,
            "start": 343.8905,
            "end": 351.5705,
            "text": " don't you explore those what does an iterator do it encapsulates the responsibility of iteration",
            "tokens": [
                51013,
                500,
                380,
                291,
                6839,
                729,
                437,
                775,
                364,
                17138,
                1639,
                360,
                309,
                38745,
                26192,
                264,
                6357,
                295,
                24784,
                51397
            ],
            "temperature": 0,
            "avg_logprob": -0.065924875,
            "compression_ratio": 1.8221154,
            "no_speech_prob": 3.2408943e-12
        },
        {
            "id": 58,
            "seek": 5407,
            "start": 351.5705,
            "end": 357.81052,
            "text": " inside something iterating different data structures requires different algorithms if you",
            "tokens": [
                51397,
                1854,
                746,
                17138,
                990,
                819,
                1412,
                9227,
                7029,
                819,
                14642,
                498,
                291,
                51709
            ],
            "temperature": 0,
            "avg_logprob": -0.065924875,
            "compression_ratio": 1.8221154,
            "no_speech_prob": 3.2408943e-12
        },
        {
            "id": 59,
            "seek": 8095,
            "start": 357.81052,
            "end": 363.3305,
            "text": " have to iterate an array you can write a for loop from i equals to 0 to n minus 1 but can you do the",
            "tokens": [
                50365,
                362,
                281,
                44497,
                364,
                10225,
                291,
                393,
                2464,
                257,
                337,
                6367,
                490,
                741,
                6915,
                281,
                1958,
                281,
                297,
                3175,
                502,
                457,
                393,
                291,
                360,
                264,
                50641
            ],
            "temperature": 0,
            "avg_logprob": -0.065116525,
            "compression_ratio": 1.771028,
            "no_speech_prob": 2.7724372e-12
        },
        {
            "id": 60,
            "seek": 8095,
            "start": 363.3305,
            "end": 368.85052,
            "text": " same thing if you have to iterate a binary search tree no you will have to use something else over",
            "tokens": [
                50641,
                912,
                551,
                498,
                291,
                362,
                281,
                44497,
                257,
                17434,
                3164,
                4230,
                572,
                291,
                486,
                362,
                281,
                764,
                746,
                1646,
                670,
                50917
            ],
            "temperature": 0,
            "avg_logprob": -0.065116525,
            "compression_ratio": 1.771028,
            "no_speech_prob": 2.7724372e-12
        },
        {
            "id": 61,
            "seek": 8095,
            "start": 368.85052,
            "end": 374.9305,
            "text": " there so what iterator pattern does is it encapsulates this iterative responsibility",
            "tokens": [
                50917,
                456,
                370,
                437,
                17138,
                1639,
                5102,
                775,
                307,
                309,
                38745,
                26192,
                341,
                17138,
                1166,
                6357,
                51221
            ],
            "temperature": 0,
            "avg_logprob": -0.065116525,
            "compression_ratio": 1.771028,
            "no_speech_prob": 2.7724372e-12
        },
        {
            "id": 62,
            "seek": 8095,
            "start": 374.9305,
            "end": 382.13052,
            "text": " inside an object and if your code is dependent on a generic iterator that means it can iterate",
            "tokens": [
                51221,
                1854,
                364,
                2657,
                293,
                498,
                428,
                3089,
                307,
                12334,
                322,
                257,
                19577,
                17138,
                1639,
                300,
                1355,
                309,
                393,
                44497,
                51581
            ],
            "temperature": 0,
            "avg_logprob": -0.065116525,
            "compression_ratio": 1.771028,
            "no_speech_prob": 2.7724372e-12
        },
        {
            "id": 63,
            "seek": 10527,
            "start": 382.13052,
            "end": 388.9305,
            "text": " across multiple data structures so there are many many design patterns in each of these buckets",
            "tokens": [
                50365,
                2108,
                3866,
                1412,
                9227,
                370,
                456,
                366,
                867,
                867,
                1715,
                8294,
                294,
                1184,
                295,
                613,
                32191,
                50705
            ],
            "temperature": 0,
            "avg_logprob": -0.07546809,
            "compression_ratio": 1.8064516,
            "no_speech_prob": 2.64555e-12
        },
        {
            "id": 64,
            "seek": 10527,
            "start": 388.9305,
            "end": 395.6505,
            "text": " but if you are really keen on exploring some of those just to get started or if you are keen about",
            "tokens": [
                50705,
                457,
                498,
                291,
                366,
                534,
                20297,
                322,
                12736,
                512,
                295,
                729,
                445,
                281,
                483,
                1409,
                420,
                498,
                291,
                366,
                20297,
                466,
                51041
            ],
            "temperature": 0,
            "avg_logprob": -0.07546809,
            "compression_ratio": 1.8064516,
            "no_speech_prob": 2.64555e-12
        },
        {
            "id": 65,
            "seek": 10527,
            "start": 395.6505,
            "end": 402.29053,
            "text": " exploring the ones that play critical role in lnt interviews i would say go for these the first is",
            "tokens": [
                51041,
                12736,
                264,
                2306,
                300,
                862,
                4924,
                3090,
                294,
                287,
                580,
                12318,
                741,
                576,
                584,
                352,
                337,
                613,
                264,
                700,
                307,
                51373
            ],
            "temperature": 0,
            "avg_logprob": -0.07546809,
            "compression_ratio": 1.8064516,
            "no_speech_prob": 2.64555e-12
        },
        {
            "id": 66,
            "seek": 10527,
            "start": 402.29053,
            "end": 406.69052,
            "text": " strategy pattern and according to me this should be the first design pattern that you should learn",
            "tokens": [
                51373,
                5206,
                5102,
                293,
                4650,
                281,
                385,
                341,
                820,
                312,
                264,
                700,
                1715,
                5102,
                300,
                291,
                820,
                1466,
                51593
            ],
            "temperature": 0,
            "avg_logprob": -0.07546809,
            "compression_ratio": 1.8064516,
            "no_speech_prob": 2.64555e-12
        },
        {
            "id": 67,
            "seek": 12983,
            "start": 406.69052,
            "end": 413.6905,
            "text": " If you understand the idea of polymorphism, if you are hands on with abstract classes, interfaces, you can get going.",
            "tokens": [
                50365,
                759,
                291,
                1223,
                264,
                1558,
                295,
                6754,
                76,
                18191,
                1434,
                11,
                498,
                291,
                366,
                2377,
                322,
                365,
                12649,
                5359,
                11,
                28416,
                11,
                291,
                393,
                483,
                516,
                13,
                50715
            ],
            "temperature": 0,
            "avg_logprob": -0.14972948,
            "compression_ratio": 1.6936936,
            "no_speech_prob": 1.8039225e-12
        },
        {
            "id": 68,
            "seek": 12983,
            "start": 413.6905,
            "end": 415.6905,
            "text": " The second is observer pattern.",
            "tokens": [
                50715,
                440,
                1150,
                307,
                27878,
                5102,
                13,
                50815
            ],
            "temperature": 0,
            "avg_logprob": -0.14972948,
            "compression_ratio": 1.6936936,
            "no_speech_prob": 1.8039225e-12
        },
        {
            "id": 69,
            "seek": 12983,
            "start": 415.6905,
            "end": 418.6905,
            "text": " It is pretty much like publisher subscriber model.",
            "tokens": [
                50815,
                467,
                307,
                1238,
                709,
                411,
                25088,
                26122,
                2316,
                13,
                50965
            ],
            "temperature": 0,
            "avg_logprob": -0.14972948,
            "compression_ratio": 1.6936936,
            "no_speech_prob": 1.8039225e-12
        },
        {
            "id": 70,
            "seek": 421,
            "start": 418.6905,
            "end": 435.89575,
            "text": " So if in any software system there are some entities which publish data and some entities which consume data you can go ahead with observer pattern next is factory pattern so it like a factory of objects it allows you to centralize",
            "tokens": [
                50965,
                407,
                498,
                294,
                604,
                4722,
                1185,
                11,
                456,
                366,
                512,
                16667,
                597,
                11374,
                1412,
                293,
                512,
                16667,
                597,
                14732,
                1412,
                11,
                291,
                393,
                2286,
                365,
                27878,
                50697,
                50697,
                5102,
                958,
                307,
                9265,
                5102,
                370,
                309,
                311,
                411,
                257,
                9265,
                295,
                6565,
                309,
                4045,
                291,
                281,
                5777,
                1125,
                51061
            ],
            "temperature": 0,
            "avg_logprob": -0.036581986,
            "compression_ratio": 1.7677726,
            "no_speech_prob": 2.084596e-12
        },
        {
            "id": 71,
            "seek": 421,
            "start": 435.89575,
            "end": 442.69574,
            "text": " the object creation at one place and allows you to prevent using new keyword across different",
            "tokens": [
                51061,
                264,
                2657,
                8016,
                412,
                472,
                1081,
                293,
                4045,
                291,
                281,
                4871,
                1228,
                777,
                20428,
                2108,
                819,
                51401
            ],
            "temperature": 0,
            "avg_logprob": -0.036581986,
            "compression_ratio": 1.7677726,
            "no_speech_prob": 2.084596e-12
        },
        {
            "id": 72,
            "seek": 421,
            "start": 442.69574,
            "end": 448.13574,
            "text": " different classes the next one is decorator pattern and it is pretty useful i'll tell you",
            "tokens": [
                51401,
                819,
                5359,
                264,
                958,
                472,
                307,
                7919,
                1639,
                5102,
                293,
                309,
                307,
                1238,
                4420,
                741,
                603,
                980,
                291,
                51673
            ],
            "temperature": 0,
            "avg_logprob": -0.036581986,
            "compression_ratio": 1.7677726,
            "no_speech_prob": 2.084596e-12
        },
        {
            "id": 73,
            "seek": 3037,
            "start": 448.13574,
            "end": 456.27573,
            "text": " It allows us to layer an object with different different capabilities without actually changing its super type.",
            "tokens": [
                50365,
                467,
                4045,
                505,
                281,
                4583,
                364,
                2657,
                365,
                819,
                819,
                10862,
                1553,
                767,
                4473,
                1080,
                1687,
                2010,
                13,
                50772
            ],
            "temperature": 0,
            "avg_logprob": -0.18502457,
            "compression_ratio": 1.6991526,
            "no_speech_prob": 1.927806e-12
        },
        {
            "id": 74,
            "seek": 3037,
            "start": 456.77573,
            "end": 458.79575,
            "text": " For example, let's say there is a reader.",
            "tokens": [
                50797,
                1171,
                1365,
                11,
                718,
                311,
                584,
                456,
                307,
                257,
                15149,
                13,
                50898
            ],
            "temperature": 0,
            "avg_logprob": -0.18502457,
            "compression_ratio": 1.6991526,
            "no_speech_prob": 1.927806e-12
        },
        {
            "id": 75,
            "seek": 3037,
            "start": 459.09573,
            "end": 461.73575,
            "text": " It simply reads data from my hard drive.",
            "tokens": [
                50913,
                467,
                2935,
                15700,
                1412,
                490,
                452,
                1152,
                3332,
                13,
                51045
            ],
            "temperature": 0,
            "avg_logprob": -0.18502457,
            "compression_ratio": 1.6991526,
            "no_speech_prob": 1.927806e-12
        },
        {
            "id": 76,
            "seek": 3037,
            "start": 462.21573,
            "end": 469.71573,
            "text": " Now, I can bring on a layer of buffering on top of it and then I can start calling it buffered file reader.",
            "tokens": [
                51069,
                823,
                11,
                286,
                393,
                1565,
                322,
                257,
                4583,
                295,
                9204,
                1794,
                322,
                1192,
                295,
                309,
                293,
                550,
                286,
                393,
                722,
                5141,
                309,
                9204,
                4073,
                3991,
                15149,
                13,
                51444
            ],
            "temperature": 0,
            "avg_logprob": -0.18502457,
            "compression_ratio": 1.6991526,
            "no_speech_prob": 1.927806e-12
        },
        {
            "id": 77,
            "seek": 3037,
            "start": 470.29575,
            "end": 477.47574,
            "text": " Where it not only reads from the file, but creates a buffer of that in RAM and then reads from it.",
            "tokens": [
                51473,
                2305,
                309,
                406,
                787,
                15700,
                490,
                264,
                3991,
                11,
                457,
                7829,
                257,
                21762,
                295,
                300,
                294,
                14561,
                293,
                550,
                15700,
                490,
                309,
                13,
                51832
            ],
            "temperature": 0,
            "avg_logprob": -0.18502457,
            "compression_ratio": 1.6991526,
            "no_speech_prob": 1.927806e-12
        },
        {
            "id": 78,
            "seek": 5971,
            "start": 477.47574,
            "end": 479.53574,
            "text": " thereby improving performance.",
            "tokens": [
                50365,
                28281,
                11470,
                3389,
                13,
                50468
            ],
            "temperature": 0,
            "avg_logprob": -0.2678018,
            "compression_ratio": 1.6213236,
            "no_speech_prob": 2.4656215e-12
        },
        {
            "id": 79,
            "seek": 5971,
            "start": 480.03574,
            "end": 483.69574,
            "text": " So decorator pattern is all about decorating a raw object",
            "tokens": [
                50493,
                407,
                7919,
                1639,
                5102,
                307,
                439,
                466,
                39172,
                257,
                8936,
                2657,
                50676
            ],
            "temperature": 0,
            "avg_logprob": -0.2678018,
            "compression_ratio": 1.6213236,
            "no_speech_prob": 2.4656215e-12
        },
        {
            "id": 80,
            "seek": 5971,
            "start": 483.69574,
            "end": 485.75574,
            "text": " with different different capabilities",
            "tokens": [
                50676,
                365,
                819,
                819,
                10862,
                50779
            ],
            "temperature": 0,
            "avg_logprob": -0.2678018,
            "compression_ratio": 1.6213236,
            "no_speech_prob": 2.4656215e-12
        },
        {
            "id": 81,
            "seek": 5971,
            "start": 485.75574,
            "end": 488.99573,
            "text": " without changing its super type.",
            "tokens": [
                50779,
                1553,
                4473,
                1080,
                1687,
                2010,
                13,
                50941
            ],
            "temperature": 0,
            "avg_logprob": -0.2678018,
            "compression_ratio": 1.6213236,
            "no_speech_prob": 2.4656215e-12
        },
        {
            "id": 82,
            "seek": 5971,
            "start": 489.31573,
            "end": 491.25574,
            "text": " The final one is builder pattern.",
            "tokens": [
                50957,
                440,
                2572,
                472,
                307,
                27377,
                5102,
                13,
                51054
            ],
            "temperature": 0,
            "avg_logprob": -0.2678018,
            "compression_ratio": 1.6213236,
            "no_speech_prob": 2.4656215e-12
        },
        {
            "id": 83,
            "seek": 5971,
            "start": 491.87573,
            "end": 493.47574,
            "text": " You must have seen a lot of classes.",
            "tokens": [
                51085,
                509,
                1633,
                362,
                1612,
                257,
                688,
                295,
                5359,
                13,
                51165
            ],
            "temperature": 0,
            "avg_logprob": -0.2678018,
            "compression_ratio": 1.6213236,
            "no_speech_prob": 2.4656215e-12
        },
        {
            "id": 84,
            "seek": 5971,
            "start": 493.73575,
            "end": 495.49573,
            "text": " For example, let's say there is a class called as user",
            "tokens": [
                51178,
                1171,
                1365,
                11,
                718,
                311,
                584,
                456,
                307,
                257,
                1508,
                1219,
                382,
                4195,
                51266
            ],
            "temperature": 0,
            "avg_logprob": -0.2678018,
            "compression_ratio": 1.6213236,
            "no_speech_prob": 2.4656215e-12
        },
        {
            "id": 85,
            "seek": 5971,
            "start": 495.49573,
            "end": 497.41574,
            "text": " which has multiple attributes inside it.",
            "tokens": [
                51266,
                597,
                575,
                3866,
                17212,
                1854,
                309,
                13,
                51362
            ],
            "temperature": 0,
            "avg_logprob": -0.2678018,
            "compression_ratio": 1.6213236,
            "no_speech_prob": 2.4656215e-12
        },
        {
            "id": 86,
            "seek": 5971,
            "start": 497.97574,
            "end": 500.83575,
            "text": " User name, user id, user age, user weight, etc.",
            "tokens": [
                51390,
                32127,
                1315,
                11,
                4195,
                4496,
                11,
                4195,
                3205,
                11,
                4195,
                3364,
                11,
                5183,
                13,
                51533
            ],
            "temperature": 0,
            "avg_logprob": -0.2678018,
            "compression_ratio": 1.6213236,
            "no_speech_prob": 2.4656215e-12
        },
        {
            "id": 87,
            "seek": 5971,
            "start": 501.03574,
            "end": 501.63574,
            "text": " So on and on.",
            "tokens": [
                51543,
                407,
                322,
                293,
                322,
                13,
                51573
            ],
            "temperature": 0,
            "avg_logprob": -0.2678018,
            "compression_ratio": 1.6213236,
            "no_speech_prob": 2.4656215e-12
        },
        {
            "id": 88,
            "seek": 5971,
            "start": 502.05573,
            "end": 504.73575,
            "text": " Now if somebody wants to create an instance of user,",
            "tokens": [
                51594,
                823,
                498,
                2618,
                2738,
                281,
                1884,
                364,
                5197,
                295,
                4195,
                11,
                51728
            ],
            "temperature": 0,
            "avg_logprob": -0.2678018,
            "compression_ratio": 1.6213236,
            "no_speech_prob": 2.4656215e-12
        },
        {
            "id": 89,
            "seek": 8697,
            "start": 504.73575,
            "end": 512.63574,
            "text": " he may or may not want to pass all these fields somebody might only want to pass user id somebody",
            "tokens": [
                50365,
                415,
                815,
                420,
                815,
                406,
                528,
                281,
                1320,
                439,
                613,
                7909,
                2618,
                1062,
                787,
                528,
                281,
                1320,
                4195,
                4496,
                2618,
                50760
            ],
            "temperature": 0,
            "avg_logprob": -0.08033978,
            "compression_ratio": 2.0765958,
            "no_speech_prob": 2.8717074e-12
        },
        {
            "id": 90,
            "seek": 8697,
            "start": 512.63574,
            "end": 517.4357,
            "text": " might want to pass user id name there can be different combinations right so what would you",
            "tokens": [
                50760,
                1062,
                528,
                281,
                1320,
                4195,
                4496,
                1315,
                456,
                393,
                312,
                819,
                21267,
                558,
                370,
                437,
                576,
                291,
                51000
            ],
            "temperature": 0,
            "avg_logprob": -0.08033978,
            "compression_ratio": 2.0765958,
            "no_speech_prob": 2.8717074e-12
        },
        {
            "id": 91,
            "seek": 8697,
            "start": 517.4357,
            "end": 521.51575,
            "text": " want to do in that case would you want to write multiple constructors for that that is going to",
            "tokens": [
                51000,
                528,
                281,
                360,
                294,
                300,
                1389,
                576,
                291,
                528,
                281,
                2464,
                3866,
                7690,
                830,
                337,
                300,
                300,
                307,
                516,
                281,
                51204
            ],
            "temperature": 0,
            "avg_logprob": -0.08033978,
            "compression_ratio": 2.0765958,
            "no_speech_prob": 2.8717074e-12
        },
        {
            "id": 92,
            "seek": 8697,
            "start": 521.51575,
            "end": 527.09576,
            "text": " be a really bad idea if you want to write different centers for that then that means you are not very",
            "tokens": [
                51204,
                312,
                257,
                534,
                1578,
                1558,
                498,
                291,
                528,
                281,
                2464,
                819,
                10898,
                337,
                300,
                550,
                300,
                1355,
                291,
                366,
                406,
                588,
                51483
            ],
            "temperature": 0,
            "avg_logprob": -0.08033978,
            "compression_ratio": 2.0765958,
            "no_speech_prob": 2.8717074e-12
        },
        {
            "id": 93,
            "seek": 8697,
            "start": 527.09576,
            "end": 533.3557,
            "text": " sure about the concept of immutability there can be less conditions if you design your code that way",
            "tokens": [
                51483,
                988,
                466,
                264,
                3410,
                295,
                3397,
                325,
                2310,
                456,
                393,
                312,
                1570,
                4487,
                498,
                291,
                1715,
                428,
                3089,
                300,
                636,
                51796
            ],
            "temperature": 0,
            "avg_logprob": -0.08033978,
            "compression_ratio": 2.0765958,
            "no_speech_prob": 2.8717074e-12
        },
        {
            "id": 94,
            "seek": 11559,
            "start": 533.3557,
            "end": 536.27576,
            "text": " So what comes to our rescue is a builder pattern.",
            "tokens": [
                50365,
                407,
                437,
                1487,
                281,
                527,
                13283,
                307,
                257,
                27377,
                5102,
                13,
                50511
            ],
            "temperature": 0,
            "avg_logprob": -0.23736045,
            "compression_ratio": 1.6981819,
            "no_speech_prob": 3.5319872e-12
        },
        {
            "id": 95,
            "seek": 11559,
            "start": 536.77576,
            "end": 538.4357,
            "text": " It's a very well-known pattern.",
            "tokens": [
                50536,
                467,
                311,
                257,
                588,
                731,
                12,
                6861,
                5102,
                13,
                50619
            ],
            "temperature": 0,
            "avg_logprob": -0.23736045,
            "compression_ratio": 1.6981819,
            "no_speech_prob": 3.5319872e-12
        },
        {
            "id": 96,
            "seek": 11559,
            "start": 538.9158,
            "end": 543.2957,
            "text": " If you have ever used the annotations like at the right builder from libraries like Longbok,",
            "tokens": [
                50643,
                759,
                291,
                362,
                1562,
                1143,
                264,
                25339,
                763,
                411,
                412,
                264,
                558,
                27377,
                490,
                15148,
                411,
                8282,
                21666,
                11,
                50862
            ],
            "temperature": 0,
            "avg_logprob": -0.23736045,
            "compression_ratio": 1.6981819,
            "no_speech_prob": 3.5319872e-12
        },
        {
            "id": 97,
            "seek": 11559,
            "start": 543.75574,
            "end": 544.81573,
            "text": " what is it that it does?",
            "tokens": [
                50885,
                437,
                307,
                309,
                300,
                309,
                775,
                30,
                50938
            ],
            "temperature": 0,
            "avg_logprob": -0.23736045,
            "compression_ratio": 1.6981819,
            "no_speech_prob": 3.5319872e-12
        },
        {
            "id": 98,
            "seek": 11559,
            "start": 545.3557,
            "end": 548.3557,
            "text": " During the compile time, it generates those builders for you",
            "tokens": [
                50965,
                6842,
                264,
                31413,
                565,
                11,
                309,
                23815,
                729,
                36281,
                337,
                291,
                51115
            ],
            "temperature": 0,
            "avg_logprob": -0.23736045,
            "compression_ratio": 1.6981819,
            "no_speech_prob": 3.5319872e-12
        },
        {
            "id": 99,
            "seek": 11559,
            "start": 548.3557,
            "end": 551.71576,
            "text": " and thereby prevents you from writing the boilerplate code.",
            "tokens": [
                51115,
                293,
                28281,
                22367,
                291,
                490,
                3579,
                264,
                39228,
                37008,
                3089,
                13,
                51283
            ],
            "temperature": 0,
            "avg_logprob": -0.23736045,
            "compression_ratio": 1.6981819,
            "no_speech_prob": 3.5319872e-12
        },
        {
            "id": 100,
            "seek": 11559,
            "start": 552.3557,
            "end": 555.33575,
            "text": " All in all, builder is a great pattern to learn about.",
            "tokens": [
                51315,
                1057,
                294,
                439,
                11,
                27377,
                307,
                257,
                869,
                5102,
                281,
                1466,
                466,
                13,
                51464
            ],
            "temperature": 0,
            "avg_logprob": -0.23736045,
            "compression_ratio": 1.6981819,
            "no_speech_prob": 3.5319872e-12
        },
        {
            "id": 101,
            "seek": 11559,
            "start": 556.01575,
            "end": 559.31573,
            "text": " So let me know in the chat box that out of these patterns,",
            "tokens": [
                51498,
                407,
                718,
                385,
                458,
                294,
                264,
                5081,
                2424,
                300,
                484,
                295,
                613,
                8294,
                11,
                51663
            ],
            "temperature": 0,
            "avg_logprob": -0.23736045,
            "compression_ratio": 1.6981819,
            "no_speech_prob": 3.5319872e-12
        },
        {
            "id": 102,
            "seek": 11559,
            "start": 559.31573,
            "end": 561.13574,
            "text": " which one makes you most curious",
            "tokens": [
                51663,
                597,
                472,
                1669,
                291,
                881,
                6369,
                51754
            ],
            "temperature": 0,
            "avg_logprob": -0.23736045,
            "compression_ratio": 1.6981819,
            "no_speech_prob": 3.5319872e-12
        },
        {
            "id": 103,
            "seek": 14337,
            "start": 561.13574,
            "end": 564.37573,
            "text": " and you would like to hear more about that particular pattern from me.",
            "tokens": [
                50365,
                293,
                291,
                576,
                411,
                281,
                1568,
                544,
                466,
                300,
                1729,
                5102,
                490,
                385,
                13,
                50527
            ],
            "temperature": 0,
            "avg_logprob": -0.2977057,
            "compression_ratio": 1.0294118,
            "no_speech_prob": 9.735418e-12
        }
    ],
    "x_groq": {
        "id": "req_01js4ndvm3fvx9r2fwvctpj1zb"
    }
}