{
    "text": " Microservices architecture enables large teams to build scalable applications that are composed of many loosely coupled services. What does a typical microservices architecture look like, and when should we use it? Let's take a look. Microservices are loosely coupled. Each service handles a dedicated function inside a large-scale application. For example, shopping cart, billing, user profile, push notifications can all be individual microservices. These functional areas are sometimes called domains. Microservices communicate with each other via well-defined interfaces with small service areas. The small service areas limit the blast radius of failures and defects. it makes each service easier to reason about in the context of the entire application. Microservices talk to one another over a combination of remote procedure calls, or RPC, event streaming or message brokers RPC like GRPC provides faster response but the blast radius or the impact to other microservices would be larger when the service was to go down Event streaming provides better isolation between services, but they take longer to process. Microservices can be independently deployed. Since each service is smaller, easier to reason about, and has a smaller blast radius. This gives the operators peace of mind and confidence to deploy often. Microservices provide more flexibility to scale up individual microservices independently. The operational flexibility is invaluable. Well-architected microservices practice strong information hiding. This often means breaking up a monolithic database into its logical components and keeping each logical component well hidden inside its corresponding microservice. By logical component, it could mean a separate schema within a database cluster or an entirely separate physical database. This is an implementation detail. However one big drawback of microservices is the breaking up of the database By breaking up a database into separate logical units the database can no longer maintain foreign key relationships and enforce referential integrity between these units. The burden of maintaining data integrity is now moved into the application layer. Now, let's take a look at other critical components required for a successful implementation of microservices architecture. A key component is an API Gateway. API Gateway handles incoming requests and routes them to the relevant microservices. The API Gateway relies on an identity provider service to handle the authentication and authorization of each request coming through the API Gateway. To locate a service to route an incoming request to, the API Gateway consults a service registry and Discovery Service. Microservices register with this service registry and discover the location of other microservices through the Discovery Service. There are other useful components in a microservices architecture like monitoring and alerting DevOps toolings for deployment and troubleshooting for example Let wrap up by discussing when to use microservices architecture Microservices cost money to build and operate. It really only makes sense for large teams. For large teams, it enables team independence. Each domain or function can be independently maintained by a dedicated team. In a well-designed microservices architecture, these independent teams can move fast and the blast radius of failure is well-contained. Each service could be independently designed, deployed, and scaled. However, the overhead of a SANG implementation is so large that it is usually not a good fit for small startups. One advice for startups is to design each function in the application with a well-defined interface. day, if the business and team are growing fast, that microservices architecture starts to make sense, it will be manageable to migrate. If you would like to learn more about system design, check out our books and weekly newsletter. Please subscribe if you learned something new. Thank you so much and we'll see you next time.",
    "task": "transcribe",
    "language": "English",
    "duration": 284.74575,
    "segments": [
        {
            "id": 0,
            "seek": 0,
            "start": 0,
            "end": 13,
            "text": " Microservices architecture enables large teams to build scalable applications",
            "tokens": [
                50365,
                5818,
                2635,
                47480,
                9482,
                17077,
                2416,
                5491,
                281,
                1322,
                38481,
                5821,
                51015
            ],
            "temperature": 0,
            "avg_logprob": -0.16834202,
            "compression_ratio": 1.6441718,
            "no_speech_prob": 4.1851022e-13
        },
        {
            "id": 1,
            "seek": 0,
            "start": 13,
            "end": 16,
            "text": " that are composed of many loosely coupled services.",
            "tokens": [
                51015,
                300,
                366,
                18204,
                295,
                867,
                37966,
                29482,
                3328,
                13,
                51165
            ],
            "temperature": 0,
            "avg_logprob": -0.16834202,
            "compression_ratio": 1.6441718,
            "no_speech_prob": 4.1851022e-13
        },
        {
            "id": 2,
            "seek": 0,
            "start": 16,
            "end": 21,
            "text": " What does a typical microservices architecture look like, and when should we use it?",
            "tokens": [
                51165,
                708,
                775,
                257,
                7476,
                15547,
                47480,
                9482,
                574,
                411,
                11,
                293,
                562,
                820,
                321,
                764,
                309,
                30,
                51415
            ],
            "temperature": 0,
            "avg_logprob": -0.16834202,
            "compression_ratio": 1.6441718,
            "no_speech_prob": 4.1851022e-13
        },
        {
            "id": 3,
            "seek": 0,
            "start": 21,
            "end": 23,
            "text": " Let's take a look.",
            "tokens": [
                51415,
                961,
                311,
                747,
                257,
                574,
                13,
                51515
            ],
            "temperature": 0,
            "avg_logprob": -0.16834202,
            "compression_ratio": 1.6441718,
            "no_speech_prob": 4.1851022e-13
        },
        {
            "id": 4,
            "seek": 0,
            "start": 23,
            "end": 25,
            "text": " Microservices are loosely coupled.",
            "tokens": [
                51515,
                5818,
                2635,
                47480,
                366,
                37966,
                29482,
                13,
                51615
            ],
            "temperature": 0,
            "avg_logprob": -0.16834202,
            "compression_ratio": 1.6441718,
            "no_speech_prob": 4.1851022e-13
        },
        {
            "id": 5,
            "seek": 2500,
            "start": 25,
            "end": 29.84,
            "text": " Each service handles a dedicated function inside a large-scale application.",
            "tokens": [
                50365,
                6947,
                2643,
                18722,
                257,
                8374,
                2445,
                1854,
                257,
                2416,
                12,
                20033,
                3861,
                13,
                50607
            ],
            "temperature": 0,
            "avg_logprob": -0.15401384,
            "compression_ratio": 1.6721991,
            "no_speech_prob": 5.99486e-13
        },
        {
            "id": 6,
            "seek": 2500,
            "start": 30.82,
            "end": 37.68,
            "text": " For example, shopping cart, billing, user profile, push notifications can all be individual microservices.",
            "tokens": [
                50656,
                1171,
                1365,
                11,
                8688,
                5467,
                11,
                35618,
                11,
                4195,
                7964,
                11,
                2944,
                13426,
                393,
                439,
                312,
                2609,
                15547,
                47480,
                13,
                50999
            ],
            "temperature": 0,
            "avg_logprob": -0.15401384,
            "compression_ratio": 1.6721991,
            "no_speech_prob": 5.99486e-13
        },
        {
            "id": 7,
            "seek": 2500,
            "start": 38.42,
            "end": 41.16,
            "text": " These functional areas are sometimes called domains.",
            "tokens": [
                51036,
                1981,
                11745,
                3179,
                366,
                2171,
                1219,
                25514,
                13,
                51173
            ],
            "temperature": 0,
            "avg_logprob": -0.15401384,
            "compression_ratio": 1.6721991,
            "no_speech_prob": 5.99486e-13
        },
        {
            "id": 8,
            "seek": 2500,
            "start": 42.64,
            "end": 48.32,
            "text": " Microservices communicate with each other via well-defined interfaces with small service areas.",
            "tokens": [
                51247,
                5818,
                2635,
                47480,
                7890,
                365,
                1184,
                661,
                5766,
                731,
                12,
                37716,
                28416,
                365,
                1359,
                2643,
                3179,
                13,
                51531
            ],
            "temperature": 0,
            "avg_logprob": -0.15401384,
            "compression_ratio": 1.6721991,
            "no_speech_prob": 5.99486e-13
        },
        {
            "id": 9,
            "seek": 2500,
            "start": 48.9,
            "end": 53.44,
            "text": " The small service areas limit the blast radius of failures and defects.",
            "tokens": [
                51560,
                440,
                1359,
                2643,
                3179,
                4948,
                264,
                12035,
                15845,
                295,
                20774,
                293,
                32655,
                13,
                51787
            ],
            "temperature": 0,
            "avg_logprob": -0.15401384,
            "compression_ratio": 1.6721991,
            "no_speech_prob": 5.99486e-13
        },
        {
            "id": 10,
            "seek": 5344,
            "start": 53.44,
            "end": 59.08,
            "text": " it makes each service easier to reason about in the context of the entire application.",
            "tokens": [
                50365,
                309,
                1669,
                1184,
                2643,
                3571,
                281,
                1778,
                466,
                294,
                264,
                4319,
                295,
                264,
                2302,
                3861,
                13,
                50647
            ],
            "temperature": 0,
            "avg_logprob": -0.25843075,
            "compression_ratio": 1.4895834,
            "no_speech_prob": 9.846191e-13
        },
        {
            "id": 11,
            "seek": 5344,
            "start": 59.08,
            "end": 66.04,
            "text": " Microservices talk to one another over a combination of remote procedure calls, or RPC,",
            "tokens": [
                50647,
                5818,
                2635,
                47480,
                751,
                281,
                472,
                1071,
                670,
                257,
                6562,
                295,
                8607,
                10747,
                5498,
                11,
                420,
                497,
                12986,
                11,
                50995
            ],
            "temperature": 0,
            "avg_logprob": -0.25843075,
            "compression_ratio": 1.4895834,
            "no_speech_prob": 9.846191e-13
        },
        {
            "id": 12,
            "seek": 66,
            "start": 66.04,
            "end": 80.41525,
            "text": " event streaming or message brokers RPC like GRPC provides faster response but the blast radius or the impact to other microservices would be larger when the service was to go down",
            "tokens": [
                50995,
                2280,
                11791,
                11,
                420,
                3636,
                47549,
                13,
                51137,
                51137,
                497,
                12986,
                411,
                10903,
                12986,
                6417,
                4663,
                4134,
                11,
                457,
                264,
                12035,
                15845,
                50792,
                50792,
                420,
                264,
                2712,
                281,
                661,
                15547,
                47480,
                576,
                312,
                4833,
                562,
                264,
                2643,
                390,
                281,
                352,
                760,
                13,
                51076
            ],
            "temperature": 0,
            "avg_logprob": -0.13770013,
            "compression_ratio": 1.6637168,
            "no_speech_prob": 8.9653426e-13
        },
        {
            "id": 13,
            "seek": 66,
            "start": 81.39525,
            "end": 86.77525,
            "text": " Event streaming provides better isolation between services, but they take longer to process.",
            "tokens": [
                51125,
                13222,
                11791,
                6417,
                1101,
                16001,
                1296,
                3328,
                11,
                457,
                436,
                747,
                2854,
                281,
                1399,
                13,
                51394
            ],
            "temperature": 0,
            "avg_logprob": -0.13770013,
            "compression_ratio": 1.6637168,
            "no_speech_prob": 8.9653426e-13
        },
        {
            "id": 14,
            "seek": 66,
            "start": 87.61525,
            "end": 93.815254,
            "text": " Microservices can be independently deployed. Since each service is smaller, easier to reason about,",
            "tokens": [
                51436,
                5818,
                2635,
                47480,
                393,
                312,
                21761,
                17826,
                13,
                4162,
                1184,
                2643,
                307,
                4356,
                11,
                3571,
                281,
                1778,
                466,
                11,
                51746
            ],
            "temperature": 0,
            "avg_logprob": -0.13770013,
            "compression_ratio": 1.6637168,
            "no_speech_prob": 8.9653426e-13
        },
        {
            "id": 15,
            "seek": 2828,
            "start": 93.815254,
            "end": 96.11525,
            "text": " and has a smaller blast radius.",
            "tokens": [
                50365,
                293,
                575,
                257,
                4356,
                12035,
                15845,
                13,
                50480
            ],
            "temperature": 0,
            "avg_logprob": -0.17779583,
            "compression_ratio": 1.639485,
            "no_speech_prob": 9.995158e-13
        },
        {
            "id": 16,
            "seek": 2828,
            "start": 96.495255,
            "end": 100.43526,
            "text": " This gives the operators peace of mind and confidence to deploy often.",
            "tokens": [
                50499,
                639,
                2709,
                264,
                19077,
                4336,
                295,
                1575,
                293,
                6687,
                281,
                7274,
                2049,
                13,
                50696
            ],
            "temperature": 0,
            "avg_logprob": -0.17779583,
            "compression_ratio": 1.639485,
            "no_speech_prob": 9.995158e-13
        },
        {
            "id": 17,
            "seek": 2828,
            "start": 101.59525,
            "end": 106.495255,
            "text": " Microservices provide more flexibility to scale up individual microservices independently.",
            "tokens": [
                50754,
                5818,
                2635,
                47480,
                2893,
                544,
                12635,
                281,
                4373,
                493,
                2609,
                15547,
                47480,
                21761,
                13,
                50999
            ],
            "temperature": 0,
            "avg_logprob": -0.17779583,
            "compression_ratio": 1.639485,
            "no_speech_prob": 9.995158e-13
        },
        {
            "id": 18,
            "seek": 2828,
            "start": 107.33525,
            "end": 110.05525,
            "text": " The operational flexibility is invaluable.",
            "tokens": [
                51041,
                440,
                16607,
                12635,
                307,
                40367,
                13,
                51177
            ],
            "temperature": 0,
            "avg_logprob": -0.17779583,
            "compression_ratio": 1.639485,
            "no_speech_prob": 9.995158e-13
        },
        {
            "id": 19,
            "seek": 2828,
            "start": 111.55525,
            "end": 115.51525,
            "text": " Well-architected microservices practice strong information hiding.",
            "tokens": [
                51252,
                1042,
                12,
                1178,
                5739,
                292,
                15547,
                47480,
                3124,
                2068,
                1589,
                10596,
                13,
                51450
            ],
            "temperature": 0,
            "avg_logprob": -0.17779583,
            "compression_ratio": 1.639485,
            "no_speech_prob": 9.995158e-13
        },
        {
            "id": 20,
            "seek": 2828,
            "start": 115.51525,
            "end": 120.995255,
            "text": " This often means breaking up a monolithic database into its logical components",
            "tokens": [
                51450,
                639,
                2049,
                1355,
                7697,
                493,
                257,
                1108,
                42878,
                8149,
                666,
                1080,
                14978,
                6677,
                51724
            ],
            "temperature": 0,
            "avg_logprob": -0.17779583,
            "compression_ratio": 1.639485,
            "no_speech_prob": 9.995158e-13
        },
        {
            "id": 21,
            "seek": 5546,
            "start": 120.995255,
            "end": 126.495255,
            "text": " and keeping each logical component well hidden inside its corresponding microservice.",
            "tokens": [
                50365,
                293,
                5145,
                1184,
                14978,
                6542,
                731,
                7633,
                1854,
                1080,
                11760,
                15547,
                25006,
                13,
                50640
            ],
            "temperature": 0,
            "avg_logprob": -0.19423708,
            "compression_ratio": 1.7570094,
            "no_speech_prob": 4.4031337e-13
        },
        {
            "id": 22,
            "seek": 5546,
            "start": 126.495255,
            "end": 131.99525,
            "text": " By logical component, it could mean a separate schema within a database cluster",
            "tokens": [
                50640,
                3146,
                14978,
                6542,
                11,
                309,
                727,
                914,
                257,
                4994,
                34078,
                1951,
                257,
                8149,
                13630,
                50915
            ],
            "temperature": 0,
            "avg_logprob": -0.19423708,
            "compression_ratio": 1.7570094,
            "no_speech_prob": 4.4031337e-13
        },
        {
            "id": 23,
            "seek": 5546,
            "start": 131.99525,
            "end": 134.79526,
            "text": " or an entirely separate physical database.",
            "tokens": [
                50915,
                420,
                364,
                7696,
                4994,
                4001,
                8149,
                13,
                51055
            ],
            "temperature": 0,
            "avg_logprob": -0.19423708,
            "compression_ratio": 1.7570094,
            "no_speech_prob": 4.4031337e-13
        },
        {
            "id": 24,
            "seek": 5546,
            "start": 134.79526,
            "end": 137.29526,
            "text": " This is an implementation detail.",
            "tokens": [
                51055,
                639,
                307,
                364,
                11420,
                2607,
                13,
                51180
            ],
            "temperature": 0,
            "avg_logprob": -0.19423708,
            "compression_ratio": 1.7570094,
            "no_speech_prob": 4.4031337e-13
        },
        {
            "id": 25,
            "seek": 137,
            "start": 137.29526,
            "end": 149.5105,
            "text": " However one big drawback of microservices is the breaking up of the database By breaking up a database into separate logical units the database can no longer maintain",
            "tokens": [
                51180,
                2908,
                11,
                472,
                955,
                2642,
                3207,
                295,
                15547,
                47480,
                307,
                264,
                7697,
                493,
                295,
                264,
                8149,
                13,
                50728,
                50728,
                3146,
                7697,
                493,
                257,
                8149,
                666,
                4994,
                14978,
                6815,
                11,
                264,
                8149,
                393,
                572,
                2854,
                6909,
                50971
            ],
            "temperature": 0,
            "avg_logprob": -0.1294369,
            "compression_ratio": 1.6666666,
            "no_speech_prob": 1.1069121e-12
        },
        {
            "id": 26,
            "seek": 137,
            "start": 149.5105,
            "end": 155.49051,
            "text": " foreign key relationships and enforce referential integrity between these units.",
            "tokens": [
                50971,
                5329,
                2141,
                6159,
                293,
                24825,
                2864,
                2549,
                16000,
                1296,
                613,
                6815,
                13,
                51270
            ],
            "temperature": 0,
            "avg_logprob": -0.1294369,
            "compression_ratio": 1.6666666,
            "no_speech_prob": 1.1069121e-12
        },
        {
            "id": 27,
            "seek": 137,
            "start": 155.49051,
            "end": 160.71051,
            "text": " The burden of maintaining data integrity is now moved into the application layer.",
            "tokens": [
                51270,
                440,
                12578,
                295,
                14916,
                1412,
                16000,
                307,
                586,
                4259,
                666,
                264,
                3861,
                4583,
                13,
                51531
            ],
            "temperature": 0,
            "avg_logprob": -0.1294369,
            "compression_ratio": 1.6666666,
            "no_speech_prob": 1.1069121e-12
        },
        {
            "id": 28,
            "seek": 137,
            "start": 160.71051,
            "end": 166.6105,
            "text": " Now, let's take a look at other critical components required for a successful implementation",
            "tokens": [
                51531,
                823,
                11,
                718,
                311,
                747,
                257,
                574,
                412,
                661,
                4924,
                6677,
                4739,
                337,
                257,
                4406,
                11420,
                51826
            ],
            "temperature": 0,
            "avg_logprob": -0.1294369,
            "compression_ratio": 1.6666666,
            "no_speech_prob": 1.1069121e-12
        },
        {
            "id": 29,
            "seek": 3059,
            "start": 166.6105,
            "end": 169.2505,
            "text": " of microservices architecture.",
            "tokens": [
                50365,
                295,
                15547,
                47480,
                9482,
                13,
                50497
            ],
            "temperature": 0,
            "avg_logprob": -0.11933045,
            "compression_ratio": 1.8815166,
            "no_speech_prob": 1.1243256e-12
        },
        {
            "id": 30,
            "seek": 3059,
            "start": 169.2505,
            "end": 172.5305,
            "text": " A key component is an API Gateway.",
            "tokens": [
                50497,
                316,
                2141,
                6542,
                307,
                364,
                9362,
                48394,
                13,
                50661
            ],
            "temperature": 0,
            "avg_logprob": -0.11933045,
            "compression_ratio": 1.8815166,
            "no_speech_prob": 1.1243256e-12
        },
        {
            "id": 31,
            "seek": 3059,
            "start": 172.5305,
            "end": 175.2505,
            "text": " API Gateway handles incoming requests",
            "tokens": [
                50661,
                9362,
                48394,
                18722,
                22341,
                12475,
                50797
            ],
            "temperature": 0,
            "avg_logprob": -0.11933045,
            "compression_ratio": 1.8815166,
            "no_speech_prob": 1.1243256e-12
        },
        {
            "id": 32,
            "seek": 3059,
            "start": 175.2505,
            "end": 178.77051,
            "text": " and routes them to the relevant microservices.",
            "tokens": [
                50797,
                293,
                18242,
                552,
                281,
                264,
                7340,
                15547,
                47480,
                13,
                50973
            ],
            "temperature": 0,
            "avg_logprob": -0.11933045,
            "compression_ratio": 1.8815166,
            "no_speech_prob": 1.1243256e-12
        },
        {
            "id": 33,
            "seek": 3059,
            "start": 178.77051,
            "end": 182.2905,
            "text": " The API Gateway relies on an identity provider service",
            "tokens": [
                50973,
                440,
                9362,
                48394,
                30910,
                322,
                364,
                6575,
                12398,
                2643,
                51149
            ],
            "temperature": 0,
            "avg_logprob": -0.11933045,
            "compression_ratio": 1.8815166,
            "no_speech_prob": 1.1243256e-12
        },
        {
            "id": 34,
            "seek": 3059,
            "start": 182.2905,
            "end": 185.2505,
            "text": " to handle the authentication and authorization",
            "tokens": [
                51149,
                281,
                4813,
                264,
                26643,
                293,
                33697,
                51297
            ],
            "temperature": 0,
            "avg_logprob": -0.11933045,
            "compression_ratio": 1.8815166,
            "no_speech_prob": 1.1243256e-12
        },
        {
            "id": 35,
            "seek": 3059,
            "start": 185.2505,
            "end": 188.5305,
            "text": " of each request coming through the API Gateway.",
            "tokens": [
                51297,
                295,
                1184,
                5308,
                1348,
                807,
                264,
                9362,
                48394,
                13,
                51461
            ],
            "temperature": 0,
            "avg_logprob": -0.11933045,
            "compression_ratio": 1.8815166,
            "no_speech_prob": 1.1243256e-12
        },
        {
            "id": 36,
            "seek": 3059,
            "start": 188.5305,
            "end": 191.8905,
            "text": " To locate a service to route an incoming request to,",
            "tokens": [
                51461,
                1407,
                22370,
                257,
                2643,
                281,
                7955,
                364,
                22341,
                5308,
                281,
                11,
                51629
            ],
            "temperature": 0,
            "avg_logprob": -0.11933045,
            "compression_ratio": 1.8815166,
            "no_speech_prob": 1.1243256e-12
        },
        {
            "id": 37,
            "seek": 3059,
            "start": 191.8905,
            "end": 195.0905,
            "text": " the API Gateway consults a service registry",
            "tokens": [
                51629,
                264,
                9362,
                48394,
                7189,
                82,
                257,
                2643,
                36468,
                51789
            ],
            "temperature": 0,
            "avg_logprob": -0.11933045,
            "compression_ratio": 1.8815166,
            "no_speech_prob": 1.1243256e-12
        },
        {
            "id": 38,
            "seek": 5907,
            "start": 195.0905,
            "end": 197.1505,
            "text": " and Discovery Service.",
            "tokens": [
                50365,
                293,
                34129,
                9561,
                13,
                50468
            ],
            "temperature": 0,
            "avg_logprob": -0.21247634,
            "compression_ratio": 1.6889952,
            "no_speech_prob": 5.7435046e-13
        },
        {
            "id": 39,
            "seek": 5907,
            "start": 197.1505,
            "end": 200.1905,
            "text": " Microservices register with this service registry",
            "tokens": [
                50468,
                5818,
                2635,
                47480,
                7280,
                365,
                341,
                2643,
                36468,
                50620
            ],
            "temperature": 0,
            "avg_logprob": -0.21247634,
            "compression_ratio": 1.6889952,
            "no_speech_prob": 5.7435046e-13
        },
        {
            "id": 40,
            "seek": 5907,
            "start": 200.1905,
            "end": 203.1305,
            "text": " and discover the location of other microservices",
            "tokens": [
                50620,
                293,
                4411,
                264,
                4914,
                295,
                661,
                15547,
                47480,
                50767
            ],
            "temperature": 0,
            "avg_logprob": -0.21247634,
            "compression_ratio": 1.6889952,
            "no_speech_prob": 5.7435046e-13
        },
        {
            "id": 41,
            "seek": 5907,
            "start": 203.1305,
            "end": 205.8305,
            "text": " through the Discovery Service.",
            "tokens": [
                50767,
                807,
                264,
                34129,
                9561,
                13,
                50902
            ],
            "temperature": 0,
            "avg_logprob": -0.21247634,
            "compression_ratio": 1.6889952,
            "no_speech_prob": 5.7435046e-13
        },
        {
            "id": 42,
            "seek": 5907,
            "start": 205.8305,
            "end": 208.5305,
            "text": " There are other useful components in a microservices",
            "tokens": [
                50902,
                821,
                366,
                661,
                4420,
                6677,
                294,
                257,
                15547,
                47480,
                51037
            ],
            "temperature": 0,
            "avg_logprob": -0.21247634,
            "compression_ratio": 1.6889952,
            "no_speech_prob": 5.7435046e-13
        },
        {
            "id": 43,
            "seek": 208,
            "start": 208.5305,
            "end": 222.20575,
            "text": " architecture like monitoring and alerting DevOps toolings for deployment and troubleshooting for example Let wrap up by discussing when to use microservices architecture",
            "tokens": [
                51037,
                9482,
                411,
                11028,
                293,
                419,
                27187,
                11,
                51177,
                51177,
                43051,
                2290,
                1109,
                337,
                19317,
                293,
                15379,
                47011,
                11,
                50649,
                50649,
                337,
                1365,
                13,
                50699,
                50699,
                961,
                311,
                7019,
                493,
                538,
                10850,
                562,
                281,
                764,
                15547,
                47480,
                9482,
                13,
                51046
            ],
            "temperature": 0,
            "avg_logprob": -0.1478322,
            "compression_ratio": 1.6428572,
            "no_speech_prob": 1.1554922e-12
        },
        {
            "id": 44,
            "seek": 208,
            "start": 222.20575,
            "end": 224.68576,
            "text": " Microservices cost money to build and operate.",
            "tokens": [
                51046,
                5818,
                2635,
                47480,
                2063,
                1460,
                281,
                1322,
                293,
                9651,
                13,
                51170
            ],
            "temperature": 0,
            "avg_logprob": -0.1478322,
            "compression_ratio": 1.6428572,
            "no_speech_prob": 1.1554922e-12
        },
        {
            "id": 45,
            "seek": 208,
            "start": 224.68576,
            "end": 227.92575,
            "text": " It really only makes sense for large teams.",
            "tokens": [
                51170,
                467,
                534,
                787,
                1669,
                2020,
                337,
                2416,
                5491,
                13,
                51332
            ],
            "temperature": 0,
            "avg_logprob": -0.1478322,
            "compression_ratio": 1.6428572,
            "no_speech_prob": 1.1554922e-12
        },
        {
            "id": 46,
            "seek": 208,
            "start": 227.92575,
            "end": 231.16576,
            "text": " For large teams, it enables team independence.",
            "tokens": [
                51332,
                1171,
                2416,
                5491,
                11,
                309,
                17077,
                1469,
                14640,
                13,
                51494
            ],
            "temperature": 0,
            "avg_logprob": -0.1478322,
            "compression_ratio": 1.6428572,
            "no_speech_prob": 1.1554922e-12
        },
        {
            "id": 47,
            "seek": 208,
            "start": 231.16576,
            "end": 236.50575,
            "text": " Each domain or function can be independently maintained by a dedicated team.",
            "tokens": [
                51494,
                6947,
                9274,
                420,
                2445,
                393,
                312,
                21761,
                17578,
                538,
                257,
                8374,
                1469,
                13,
                51761
            ],
            "temperature": 0,
            "avg_logprob": -0.1478322,
            "compression_ratio": 1.6428572,
            "no_speech_prob": 1.1554922e-12
        },
        {
            "id": 48,
            "seek": 3000,
            "start": 236.50575,
            "end": 242.04575,
            "text": " In a well-designed microservices architecture, these independent teams can move fast and",
            "tokens": [
                50365,
                682,
                257,
                731,
                12,
                14792,
                16690,
                15547,
                47480,
                9482,
                11,
                613,
                6695,
                5491,
                393,
                1286,
                2370,
                293,
                50642
            ],
            "temperature": 0,
            "avg_logprob": -0.15400313,
            "compression_ratio": 1.6482214,
            "no_speech_prob": 7.759648e-13
        },
        {
            "id": 49,
            "seek": 3000,
            "start": 242.04575,
            "end": 245.92575,
            "text": " the blast radius of failure is well-contained.",
            "tokens": [
                50642,
                264,
                12035,
                15845,
                295,
                7763,
                307,
                731,
                12,
                9000,
                3563,
                13,
                50836
            ],
            "temperature": 0,
            "avg_logprob": -0.15400313,
            "compression_ratio": 1.6482214,
            "no_speech_prob": 7.759648e-13
        },
        {
            "id": 50,
            "seek": 3000,
            "start": 245.92575,
            "end": 250.10576,
            "text": " Each service could be independently designed, deployed, and scaled.",
            "tokens": [
                50836,
                6947,
                2643,
                727,
                312,
                21761,
                4761,
                11,
                17826,
                11,
                293,
                36039,
                13,
                51045
            ],
            "temperature": 0,
            "avg_logprob": -0.15400313,
            "compression_ratio": 1.6482214,
            "no_speech_prob": 7.759648e-13
        },
        {
            "id": 51,
            "seek": 3000,
            "start": 250.10576,
            "end": 255.40576,
            "text": " However, the overhead of a SANG implementation is so large that it is usually not a good",
            "tokens": [
                51045,
                2908,
                11,
                264,
                19922,
                295,
                257,
                318,
                12419,
                11420,
                307,
                370,
                2416,
                300,
                309,
                307,
                2673,
                406,
                257,
                665,
                51310
            ],
            "temperature": 0,
            "avg_logprob": -0.15400313,
            "compression_ratio": 1.6482214,
            "no_speech_prob": 7.759648e-13
        },
        {
            "id": 52,
            "seek": 3000,
            "start": 255.40576,
            "end": 257.94574,
            "text": " fit for small startups.",
            "tokens": [
                51310,
                3318,
                337,
                1359,
                28041,
                13,
                51437
            ],
            "temperature": 0,
            "avg_logprob": -0.15400313,
            "compression_ratio": 1.6482214,
            "no_speech_prob": 7.759648e-13
        },
        {
            "id": 53,
            "seek": 3000,
            "start": 257.94574,
            "end": 263.38574,
            "text": " One advice for startups is to design each function in the application with a well-defined",
            "tokens": [
                51437,
                1485,
                5192,
                337,
                28041,
                307,
                281,
                1715,
                1184,
                2445,
                294,
                264,
                3861,
                365,
                257,
                731,
                12,
                37716,
                51709
            ],
            "temperature": 0,
            "avg_logprob": -0.15400313,
            "compression_ratio": 1.6482214,
            "no_speech_prob": 7.759648e-13
        },
        {
            "id": 54,
            "seek": 3000,
            "start": 263.38574,
            "end": 264.50574,
            "text": " interface.",
            "tokens": [
                51709,
                9226,
                13,
                51765
            ],
            "temperature": 0,
            "avg_logprob": -0.15400313,
            "compression_ratio": 1.6482214,
            "no_speech_prob": 7.759648e-13
        },
        {
            "id": 55,
            "seek": 5800,
            "start": 264.50574,
            "end": 270.26575,
            "text": " day, if the business and team are growing fast, that microservices architecture starts to make",
            "tokens": [
                50365,
                786,
                11,
                498,
                264,
                1606,
                293,
                1469,
                366,
                4194,
                2370,
                11,
                300,
                15547,
                47480,
                9482,
                3719,
                281,
                652,
                50653
            ],
            "temperature": 0,
            "avg_logprob": -0.120650806,
            "compression_ratio": 1.5330188,
            "no_speech_prob": 9.540022e-13
        },
        {
            "id": 56,
            "seek": 5800,
            "start": 270.26575,
            "end": 276.26575,
            "text": " sense, it will be manageable to migrate. If you would like to learn more about system design,",
            "tokens": [
                50653,
                2020,
                11,
                309,
                486,
                312,
                38798,
                281,
                31821,
                13,
                759,
                291,
                576,
                411,
                281,
                1466,
                544,
                466,
                1185,
                1715,
                11,
                50953
            ],
            "temperature": 0,
            "avg_logprob": -0.120650806,
            "compression_ratio": 1.5330188,
            "no_speech_prob": 9.540022e-13
        },
        {
            "id": 57,
            "seek": 5800,
            "start": 276.26575,
            "end": 281.06577,
            "text": " check out our books and weekly newsletter. Please subscribe if you learned something new.",
            "tokens": [
                50953,
                1520,
                484,
                527,
                3642,
                293,
                12460,
                26469,
                13,
                2555,
                3022,
                498,
                291,
                3264,
                746,
                777,
                13,
                51193
            ],
            "temperature": 0,
            "avg_logprob": -0.120650806,
            "compression_ratio": 1.5330188,
            "no_speech_prob": 9.540022e-13
        },
        {
            "id": 58,
            "seek": 5800,
            "start": 281.06577,
            "end": 284.34576,
            "text": " Thank you so much and we'll see you next time.",
            "tokens": [
                51193,
                1044,
                291,
                370,
                709,
                293,
                321,
                603,
                536,
                291,
                958,
                565,
                13,
                51357
            ],
            "temperature": 0,
            "avg_logprob": -0.120650806,
            "compression_ratio": 1.5330188,
            "no_speech_prob": 9.540022e-13
        }
    ],
    "x_groq": {
        "id": "req_01jssb4e4rftsv8b4xf9s755s8"
    }
}